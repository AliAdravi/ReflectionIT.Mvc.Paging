@model  ReflectionIT.Mvc.Paging.IPagingList

@{
    var start = Math.Max(1, Model.PageIndex - 5);
    var stop = Math.Min(start + 10, Model.PageCount);
}

@if (this.Model.PageCount > 1) {
    <ul class="pagination">

        @if (start > 1) {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(1))" aria-label="Previous">
                    <span aria-hidden="true">1</span>
                </a>
            </li>
        }

        @if (this.Model.PageIndex > 1) {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex - 1))" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = start; i <= stop; i++) {
            <li class="@((Model.PageIndex == i) ? "active" : null)">
                @Html.ActionLink(i.ToString(), Model.Action, Model.GetRouteValueForPage(i))
            </li>
        }

        @if (this.Model.PageIndex < this.Model.PageCount) {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex + 1))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }

        @if (stop < this.Model.PageCount) {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageCount))" aria-label="Next">
                    <span aria-hidden="true">@this.Model.PageCount</span>
                </a>
            </li>
        }

    </ul>
}
